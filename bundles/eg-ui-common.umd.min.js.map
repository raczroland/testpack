{
  "version": 3,
  "file": "eg-ui-common.umd.min.js",
  "sources": [
    "ng://eg-ui-common/out/src/app/modules/scheduler/scheduler/scheduler.component.ts",
    "ng://eg-ui-common/out/src/app/modules/scheduler/scheduler.module.ts"
  ],
  "sourcesContent": [
    "import {AfterViewInit, Component, ElementRef, Input, OnDestroy, ViewChild} from '@angular/core';\n\ndeclare var kendo: any;\n\n@Component({\n  selector: 'eg-ui-scheduler',\n  template: `\n    <div #scheduler></div>\n  `,\n  styles: [``]\n})\nexport class SchedulerComponent implements AfterViewInit, OnDestroy {\n\n  @Input()\n  events;\n\n  @ViewChild('scheduler') schedulerEl: ElementRef;\n\n  constructor(private elementRef: ElementRef) { }\n\n  ngAfterViewInit() {\n    kendo.jQuery(this.schedulerEl.nativeElement).kendoScheduler({\n      date: new Date(\"2018/2/13\"),\n      startTime: new Date(\"2018/2/13 07:00 AM\"),\n      height: 600,\n      views: [\n        \"day\",\n        {type: \"workWeek\", selected: true},\n        \"week\",\n        \"month\",\n        \"agenda\",\n        {type: \"timeline\", eventHeight: 50}\n      ],\n      timezone: \"Etc/UTC\",\n      // dataSource: {\n      //   batch: true,\n      //   transport: {\n      //     read: {\n      //       url: \"https://demos.telerik.com/kendo-ui/service/tasks\",\n      //       dataType: \"jsonp\"\n      //     },\n      //     update: {\n      //       url: \"https://demos.telerik.com/kendo-ui/service/tasks/update\",\n      //       dataType: \"jsonp\"\n      //     },\n      //     create: {\n      //       url: \"https://demos.telerik.com/kendo-ui/service/tasks/create\",\n      //       dataType: \"jsonp\"\n      //     },\n      //     destroy: {\n      //       url: \"https://demos.telerik.com/kendo-ui/service/tasks/destroy\",\n      //       dataType: \"jsonp\"\n      //     },\n      //     parameterMap: function (options, operation) {\n      //       if (operation !== \"read\" && options.models) {\n      //         return {models: kendo.stringify(options.models)};\n      //       }\n      //     }\n      //   },\n      //   schema: {\n      //     model: {\n      //       id: \"taskId\",\n      //       fields: {\n      //         taskId: {from: \"TaskID\", type: \"number\"},\n      //         title: {from: \"Title\", defaultValue: \"No title\", validation: {required: true}},\n      //         start: {type: \"date\", from: \"Start\"},\n      //         end: {type: \"date\", from: \"End\"},\n      //         startTimezone: {from: \"StartTimezone\"},\n      //         endTimezone: {from: \"EndTimezone\"},\n      //         description: {from: \"Description\"},\n      //         recurrenceId: {from: \"RecurrenceID\"},\n      //         recurrenceRule: {from: \"RecurrenceRule\"},\n      //         recurrenceException: {from: \"RecurrenceException\"},\n      //         ownerId: {from: \"OwnerID\", defaultValue: 1},\n      //         isAllDay: {type: \"boolean\", from: \"IsAllDay\"}\n      //       }\n      //     }\n      //   },\n      //   filter: {\n      //     logic: \"or\",\n      //     filters: [\n      //       {field: \"ownerId\", operator: \"eq\", value: 1},\n      //       {field: \"ownerId\", operator: \"eq\", value: 2}\n      //     ]\n      //   }\n      // },\n       dataSource: this.events, // [ // The kendo.data.SchedulerDataSource configuration\n      //   // First scheduler event\n      //   {\n      //     id: 1, // Unique identifier. Needed for editing.\n      //     start: new Date(\"2018/2/14 08:00 AM\"), // Start of the event\n      //     end: new Date(\"2018/2/14 09:00 AM\"), // End of the event\n      //     title: \"Breakfast\", // Title of the event\n      //     ownerId: 1,\n      //   },\n      //   // Second scheduler event\n      //   {\n      //     id: 2,\n      //     start: new Date(\"2018/2/15 10:15 AM\"),\n      //     end: new Date(\"2018/2/15 12:30 PM\"),\n      //     title: \"Job Interview\",\n      //     ownerId: 2,\n      //   },\n      //   // Third scheduler event\n      //   {\n      //     id: 3, // Unique identifier. Needed for editing.\n      //     start: new Date(\"2018/2/14 08:30 AM\"), // Start of the event\n      //     end: new Date(\"2018/2/14 10:30 AM\"), // End of the event\n      //     title: \"Breakfast\", // Title of the event\n      //     ownerId: 3,\n      //   },\n      // ],\n      resources: [\n        {\n          field: \"ownerId\",\n          title: \"Owner\",\n          dataSource: [\n            {text: \"Alex\", value: 1, color: \"#f8a398\"},\n            {text: \"Bob\", value: 2, color: \"#51a0ed\"},\n            {text: \"Charlie\", value: 3, color: \"#56ca85\"}\n          ]\n        }\n      ]\n    });\n  }\n\n  ngOnDestroy() {\n    kendo.destroy(this.elementRef.nativeElement);\n  }\n\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SchedulerComponent } from './scheduler/scheduler.component';\n\nimport '@progress/kendo-ui';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [SchedulerComponent],\n  exports: [\n    SchedulerComponent,\n  ]\n})\nexport class SchedulerModule { }\n"
  ],
  "names": [
    "this",
    "elementRef",
    "kendo",
    "jQuery",
    "schedulerEl",
    "nativeElement",
    "kendoScheduler",
    "date",
    "Date",
    "startTime",
    "height",
    "views",
    "type",
    "selected",
    "eventHeight",
    "timezone",
    "field",
    "title",
    "dataSource",
    "text",
    "value",
    "color",
    "destroy",
    "SchedulerComponent",
    "Component",
    "args",
    "selector",
    "template",
    "propDecorators",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports"
  ],
  "mappings": "oYAkBAA,KAAAC,WAA4CA,EA8G5C,8CA5GAC,MAAAC,OAAAH,KAAAI,YAAAC,eAAAC,gBACAC,KAAA,IAAAC,KAAA,aACMC,UAAN,IAAqBD,KAArB,sBACME,OAAN,IACMC,OACN,OACAC,KAAA,WAAAC,UAAA,GACQ,OACA,QACA,UACRD,KAAgB,WAAhBE,YAAA,KAEAC,SAAA,6CAiFAC,MAAA,UACUC,MAAO,QACPC,aACVC,KAAsB,OAAtBC,MAAA,EAAAC,MAAA,YACaF,KAAM,MAAnBC,MAAA,EAAAC,MAAA,YACaF,KAAM,UAAnBC,MAAA,EAAAC,MAAA,oDAQAnB,MAAAoB,QAAAtB,KAAAC,WAAAI,gBAEAkB,oBA5HAX,KAACY,EAAAA,UAADC,OACEC,SAAU,kBACVC,SAAU,4GANZJ,EAAAK,8GCAA,sCAMAhB,KAACiB,EAAAA,SAADJ,OACEK,SACEC,EAAAA,cAEFC,cAAeT,GACfU,SACEV"
}
