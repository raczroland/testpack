{
  "version": 3,
  "file": "eg-ui-common.umd.js",
  "sources": [
    "ng://eg-ui-common/out/src/app/modules/scheduler/scheduler.module.ts",
    "ng://eg-ui-common/out/src/app/modules/scheduler/scheduler/scheduler.component.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SchedulerComponent } from './scheduler/scheduler.component';\n\nimport '@progress/kendo-ui';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [SchedulerComponent],\n  exports: [\n    SchedulerComponent,\n  ]\n})\nexport class SchedulerModule { }\n",
    "import {AfterViewInit, Component, ElementRef, Input, OnDestroy, ViewChild} from '@angular/core';\n\ndeclare var kendo: any;\n\n@Component({\n  selector: 'eg-ui-scheduler',\n  template: `\n    <div #scheduler></div>\n  `,\n  styles: [``]\n})\nexport class SchedulerComponent implements AfterViewInit, OnDestroy {\n\n  @Input()\n  events;\n\n  @ViewChild('scheduler') schedulerEl: ElementRef;\n\n  constructor(private elementRef: ElementRef) { }\n\n  ngAfterViewInit() {\n    kendo.jQuery(this.schedulerEl.nativeElement).kendoScheduler({\n      date: new Date(\"2018/2/13\"),\n      startTime: new Date(\"2018/2/13 07:00 AM\"),\n      height: 600,\n      views: [\n        \"day\",\n        {type: \"workWeek\", selected: true},\n        \"week\",\n        \"month\",\n        \"agenda\",\n        {type: \"timeline\", eventHeight: 50}\n      ],\n      timezone: \"Etc/UTC\",\n      // dataSource: {\n      //   batch: true,\n      //   transport: {\n      //     read: {\n      //       url: \"https://demos.telerik.com/kendo-ui/service/tasks\",\n      //       dataType: \"jsonp\"\n      //     },\n      //     update: {\n      //       url: \"https://demos.telerik.com/kendo-ui/service/tasks/update\",\n      //       dataType: \"jsonp\"\n      //     },\n      //     create: {\n      //       url: \"https://demos.telerik.com/kendo-ui/service/tasks/create\",\n      //       dataType: \"jsonp\"\n      //     },\n      //     destroy: {\n      //       url: \"https://demos.telerik.com/kendo-ui/service/tasks/destroy\",\n      //       dataType: \"jsonp\"\n      //     },\n      //     parameterMap: function (options, operation) {\n      //       if (operation !== \"read\" && options.models) {\n      //         return {models: kendo.stringify(options.models)};\n      //       }\n      //     }\n      //   },\n      //   schema: {\n      //     model: {\n      //       id: \"taskId\",\n      //       fields: {\n      //         taskId: {from: \"TaskID\", type: \"number\"},\n      //         title: {from: \"Title\", defaultValue: \"No title\", validation: {required: true}},\n      //         start: {type: \"date\", from: \"Start\"},\n      //         end: {type: \"date\", from: \"End\"},\n      //         startTimezone: {from: \"StartTimezone\"},\n      //         endTimezone: {from: \"EndTimezone\"},\n      //         description: {from: \"Description\"},\n      //         recurrenceId: {from: \"RecurrenceID\"},\n      //         recurrenceRule: {from: \"RecurrenceRule\"},\n      //         recurrenceException: {from: \"RecurrenceException\"},\n      //         ownerId: {from: \"OwnerID\", defaultValue: 1},\n      //         isAllDay: {type: \"boolean\", from: \"IsAllDay\"}\n      //       }\n      //     }\n      //   },\n      //   filter: {\n      //     logic: \"or\",\n      //     filters: [\n      //       {field: \"ownerId\", operator: \"eq\", value: 1},\n      //       {field: \"ownerId\", operator: \"eq\", value: 2}\n      //     ]\n      //   }\n      // },\n       dataSource: this.events, // [ // The kendo.data.SchedulerDataSource configuration\n      //   // First scheduler event\n      //   {\n      //     id: 1, // Unique identifier. Needed for editing.\n      //     start: new Date(\"2018/2/14 08:00 AM\"), // Start of the event\n      //     end: new Date(\"2018/2/14 09:00 AM\"), // End of the event\n      //     title: \"Breakfast\", // Title of the event\n      //     ownerId: 1,\n      //   },\n      //   // Second scheduler event\n      //   {\n      //     id: 2,\n      //     start: new Date(\"2018/2/15 10:15 AM\"),\n      //     end: new Date(\"2018/2/15 12:30 PM\"),\n      //     title: \"Job Interview\",\n      //     ownerId: 2,\n      //   },\n      //   // Third scheduler event\n      //   {\n      //     id: 3, // Unique identifier. Needed for editing.\n      //     start: new Date(\"2018/2/14 08:30 AM\"), // Start of the event\n      //     end: new Date(\"2018/2/14 10:30 AM\"), // End of the event\n      //     title: \"Breakfast\", // Title of the event\n      //     ownerId: 3,\n      //   },\n      // ],\n      resources: [\n        {\n          field: \"ownerId\",\n          title: \"Owner\",\n          dataSource: [\n            {text: \"Alex\", value: 1, color: \"#f8a398\"},\n            {text: \"Bob\", value: 2, color: \"#51a0ed\"},\n            {text: \"Charlie\", value: 3, color: \"#56ca85\"}\n          ]\n        }\n      ]\n    });\n  }\n\n  ngOnDestroy() {\n    kendo.destroy(this.elementRef.nativeElement);\n  }\n\n}\n"
  ],
  "names": [
    "CommonModule",
    "NgModule",
    "Component"
  ],
  "mappings": ";;;;;;;;;;;;;;;QCkBA,IAAA,CAAA,UAAA,GAA4C,UAA5C,CAAA;KAAA;;;;;QAEA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,WAAA,CAAA,aAAA,CAAA,CAAA,cAAA,CAAA;YACA,IAAA,EAAA,IAAA,IAAsB,CAAtB,WAAkC,CAAlC;YACM,SAAN,EAAA,IAAqB,IAArB,CAAA,oBAAA,CAAA;YACM,MAAN,EAAA,GAAiB;YACX,KAAN,EAAA;gBACA,KAAA;gBACQ,EAAR,IAAA,EAAA,UAAA,EAAA,QAAA,EAAA,IAAA,EAAA;gBACQ,MAAK;gBACL,OAAR;gBACQ,QAAR;gBACQ,EAAR,IAAA,EAAgB,UAAhB,EAAA,WAAA,EAAA,EAAA,EAAA;aACA;YACA,QAAA,EAAA,SAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAgFA;oBACA,KAAA,EAAA,SAAA;oBACU,KAAK,EAAE,OAAjB;oBACU,UAAV,EAAA;wBACA,EAAA,IAAoB,EAAE,MAAtB,EAAA,KAAA,EAAA,CAAA,EAAA,KAAA,EAAA,SAAA,EAAA;wBACY,EAAC,IAAI,EAAE,KAAnB,EAAA,KAAA,EAAA,CAAkC,EAAlC,KAAA,EAAA,SAAA,EAAA;wBACY,EAAC,IAAI,EAAE,SAAnB,EAAA,KAAA,EAAA,CAAA,EAAA,KAAA,EAAA,SAAA,EAAA;qBACA;iBACA;aACA;SACA,CAAA,CAAA;KACA,CAAA;;;;;QAGA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,UAAA,CAAA,aAAA,CAAA,CAAA;KACA,CAAA;IACA,OAAA,kBAAA,CAAA;;;IA5HA,EAAA,IAAA,EAACE,cAAS,EAAV,IAAA,EAAA,CAAW;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,QAAQ,EAAE,kCAAZ;;aAEA,EAAA,EAAA;CACA,CAAA;;;;;AATA,kBAAA,CAAA,cAAA,GAAA;;;CAaA,CAAA;;;;;;;;IDbA,OAAA,eAAA,CAAA;;;IAMA,EAAA,IAAA,EAACD,aAAQ,EAAT,IAAA,EAAA,CAAU;gBACR,OAAO,EAAE;oBACPD,mBAAY;iBACb;gBACD,YAAY,EAAE,CAAC,kBAAkB,CAAC;gBAClC,OAAO,EAAE;oBACP,kBAAkB;iBACnB;aACF,EAAD,EAAA;;;;;;;;;;;;;;;;"
}
